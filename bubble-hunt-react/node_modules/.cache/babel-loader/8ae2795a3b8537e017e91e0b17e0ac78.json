{"ast":null,"code":"import _slicedToArray from \"/home/fadi/Desktop/code/bubble-hunt/bubble-hunt-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fadi/Desktop/code/bubble-hunt/bubble-hunt-react/src/components/aimGame/index.js\";\nimport React, { Component } from \"react\";\nimport Canvas from \"./canvas\";\nconst units = 10;\nexport default class AimGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: false,\n      bubbles: [],\n      score: 0,\n      lives: 5\n    };\n    this.t = null;\n    this.secondsPassed = 0;\n    this.delay = 2000;\n\n    this.resetDelay = () => {\n      this.delay = 2000;\n    };\n\n    this.decDelay = () => {\n      setTimeout(() => {\n        this.secondsPassed += 1;\n\n        if (this.secondsPassed < 37) {\n          this.delay -= 50;\n          this.decDelay();\n        }\n      }, 1000);\n    };\n\n    this.generateRandomCoordinates = () => {\n      const random = () => Math.floor(Math.random() * units);\n\n      return [random(), random()];\n    };\n\n    this.showBubble = () => {\n      const newCoor = this.generateRandomCoordinates();\n      const bubbles = this.state.bubbles;\n\n      if (bubbles.length === units * units) {\n        return this.endGame();\n      }\n\n      let i = bubbles.find(([first, second]) => {\n        const _newCoor = _slicedToArray(newCoor, 2),\n              newFirst = _newCoor[0],\n              newSecond = _newCoor[1];\n\n        return newFirst === first && newSecond === second;\n      });\n\n      if (!i) {\n        this.setState(({\n          bubbles\n        }) => ({\n          bubbles: [...bubbles, newCoor]\n        }));\n        this.t = setTimeout(this.showBubble, this.delay);\n      } else {\n        this.showBubble();\n      }\n    };\n\n    this.incScore = id => {\n      this.setState(({\n        score\n      }) => ({\n        score: score + 100\n      }));\n      this.hideBubble(id);\n      this.setBestScore();\n    };\n\n    this.decScore = () => {\n      if (this.state.lives === 1) this.endGame();\n\n      if (this.state.start) {\n        this.setState(({\n          score,\n          lives\n        }) => ({\n          score: score - 80,\n          lives: lives - 1\n        }));\n      }\n    };\n\n    this.hideBubble = id => {\n      const _id$toString$split = id.toString().split(\"\"),\n            _id$toString$split2 = _slicedToArray(_id$toString$split, 2),\n            first = _id$toString$split2[0],\n            second = _id$toString$split2[1];\n\n      const coor = [+first, +second];\n      const newBubbles = this.state.bubbles.filter(([first, second]) => {\n        const newFirst = coor[0],\n              newSecond = coor[1];\n        return !(newFirst === first && newSecond === second);\n      });\n      this.setState({\n        bubbles: newBubbles\n      });\n    };\n\n    this.startGame = () => {\n      this.resetDelay();\n      this.decDelay();\n      this.setState({\n        start: true,\n        score: 0\n      });\n      this.t = setTimeout(this.showBubble, 500);\n    };\n\n    this.endGame = () => {\n      clearTimeout(this.t); // // save record in local storage ...\n\n      this.setState({\n        start: false,\n        bubbles: [],\n        lives: 0\n      });\n    };\n\n    this.setBestScore = () => {\n      if (this.getBestScore() < this.state.score) setTimeout(() => localStorage.setItem(\"bestScore\", JSON.stringify(this.state.score)), 0);\n    };\n\n    this.getBestScore = () => {\n      const bestScore = localStorage.getItem(\"bestScore\");\n      return bestScore ? JSON.parse(bestScore) : \"0\";\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          bubbles = _this$state.bubbles,\n          start = _this$state.start,\n          score = _this$state.score,\n          lives = _this$state.lives;\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      onClick: start ? this.endGame : this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, start ? \"End\" : \"Start\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"your score is : \", score, \" lives: \", lives, \" best score :\", this.getBestScore()), React.createElement(Canvas, {\n      units: units,\n      bubbles: bubbles,\n      bubbleOnClick: this.incScore,\n      canvasOnClick: this.decScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/fadi/Desktop/code/bubble-hunt/bubble-hunt-react/src/components/aimGame/index.js"],"names":["React","Component","Canvas","units","AimGame","state","start","bubbles","score","lives","t","secondsPassed","delay","resetDelay","decDelay","setTimeout","generateRandomCoordinates","random","Math","floor","showBubble","newCoor","length","endGame","i","find","first","second","newFirst","newSecond","setState","incScore","id","hideBubble","setBestScore","decScore","toString","split","coor","newBubbles","filter","startGame","clearTimeout","getBestScore","localStorage","setItem","JSON","stringify","bestScore","getItem","parse","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Canvas from \"./canvas\";\n\nconst units = 10;\nexport default class AimGame extends Component {\n  state = {\n    start: false,\n    bubbles: [],\n    score: 0,\n    lives: 5,\n  };\n  t = null;\n  secondsPassed = 0;\n  delay = 2000;\n  resetDelay = () => {\n    this.delay = 2000;\n  };\n  decDelay = () => {\n    setTimeout(() => {\n      this.secondsPassed += 1;\n      if (this.secondsPassed < 37) {\n        this.delay -= 50;\n        this.decDelay();\n      }\n    }, 1000);\n  };\n  generateRandomCoordinates = () => {\n    const random = () => Math.floor(Math.random() * units);\n    return [random(), random()];\n  };\n\n  showBubble = () => {\n    const newCoor = this.generateRandomCoordinates();\n    const { bubbles } = this.state;\n    if (bubbles.length === units * units) {\n      return this.endGame();\n    }\n    let i = bubbles.find(([first, second]) => {\n      const [newFirst, newSecond] = newCoor;\n      return newFirst === first && newSecond === second;\n    });\n    if (!i) {\n      this.setState(({ bubbles }) => ({\n        bubbles: [...bubbles, newCoor]\n      }));\n      this.t = setTimeout(this.showBubble, this.delay);\n    } else {\n      this.showBubble();\n    }\n  };\n  incScore = id => {\n    this.setState(({ score }) => ({ score: score + 100 }));\n    this.hideBubble(id);\n    this.setBestScore();\n  };\n  decScore = () => {\n    if (this.state.lives === 1) this.endGame();\n    if (this.state.start) {\n      this.setState(({ score, lives }) => ({\n        score: score - 80,\n        lives: lives - 1\n      }));\n    }\n  };\n  hideBubble = id => {\n    const [first, second] = id.toString().split(\"\");\n    const coor = [+first, +second];\n    const newBubbles = this.state.bubbles.filter(([first, second]) => {\n      const [newFirst, newSecond] = coor;\n      return !(newFirst === first && newSecond === second);\n    });\n    this.setState({ bubbles: newBubbles });\n  };\n  startGame = () => {\n    this.resetDelay();\n    this.decDelay();\n    this.setState({ start: true, score: 0 });\n    this.t = setTimeout(this.showBubble, 500);\n  };\n\n  endGame = () => {\n    clearTimeout(this.t);\n    // // save record in local storage ...\n    this.setState({ start: false, bubbles: [], lives: 0 });\n  };\n  setBestScore = () => {\n    if (this.getBestScore() < this.state.score)\n      setTimeout(\n        () =>\n          localStorage.setItem(\"bestScore\", JSON.stringify(this.state.score)),\n        0\n      );\n  };\n\n  getBestScore = () => {\n    const bestScore = localStorage.getItem(\"bestScore\");\n    return bestScore ? JSON.parse(bestScore) : \"0\";\n  };\n\n  render() {\n    const { bubbles, start, score, lives } = this.state;\n    return (\n      <>\n        <h1 onClick={start ? this.endGame : this.startGame}>\n          {start ? \"End\" : \"Start\"}\n        </h1>\n        <h1>\n          your score is : {score} lives: {lives} best score :\n          {this.getBestScore()}\n        </h1>\n        <Canvas\n          units={units}\n          bubbles={bubbles}\n          bubbleOnClick={this.incScore}\n          canvasOnClick={this.decScore}\n        />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}